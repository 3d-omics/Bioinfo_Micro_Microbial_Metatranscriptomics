# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.

from snakemake.utils import min_version

min_version("8.0")

import pandas as pd
import yaml


# Import configuration files
configfile: "config/config.yml"


samples = pd.read_table(config["samples"], comment="#", dtype="str")
features = yaml.load(open(config["features"], "r"), Loader=yaml.SafeLoader)
params = yaml.load(open(config["params"], "r"), Loader=yaml.SafeLoader)

# Generate useful variables
SAMPLES = samples["sample_id"].drop_duplicates().values.tolist()
SAMPLE_LIBRARY = samples[["sample_id", "library_id"]].values.tolist()
BAM_REPORTS = ["stats.tsv", "flagstats.txt", "idxstats.tsv"]
KRAKEN2_DBS = (
    []
    if features["databases"]["kraken2"] is None
    else list(features["databases"]["kraken2"].keys())
)
MAG_CATALOGUES = features["mag_catalogues"]
COVERM_GENOME_METHODS = params["quantify"]["coverm"]["genome"]["methods"]
COVERM_CONTIG_METHODS = params["quantify"]["coverm"]["contig"]["methods"]
HOST_NAMES = [] if features["hosts"] is None else list(features["hosts"].keys())
LAST_HOST = HOST_NAMES[-1] if len(HOST_NAMES) > 0 else None


module helpers:
    snakefile:
        github("jlanga/snakehelpers", path="workflow/Snakefile", branch="main")
    config:
        config


use rule * from helpers as helpers__*


# Import subworkflows
include: "rules/folders.smk"
include: "rules/functions.smk"
include: "rules/preprocess.smk"
include: "rules/quantify.smk"


rule all:
    """Default pipeline"""
    input:
        rules.preprocess__multiqc__all.input,
        rules.preprocess__kraken2__all.input,
        rules.quantify__multiqc__all.input,
        rules.quantify__subread__all.input,
